import Head from 'next/head'
import React, { useRef, useState } from 'react'
import { InputText } from 'primereact/inputtext'
import { Card } from 'primereact/card';
import { Button } from 'primereact/button';
import { useForm } from 'react-hook-form';
import { yupResolver } from '@hookform/resolvers/yup';
import * as yup from "yup";
import { Toast } from 'primereact/toast';
import gql from 'graphql-tag';
import { useMutation } from '@apollo/client';

const FORGOT_PASSWORD = gql`
  mutation ForgotPassword($email: String!) {
    forgotPassword(input: { email: $email }) {
      error
      data
    }
  }
`;

type ForgotPasswordData = {
  email: string;
}

const schema = yup.object().shape({
  email: yup.string().email().max(255).required()
});

export default function Login() {
  const [loading, setLoading] = useState(false)
  const toast = useRef<Toast>(null);
  const { register, handleSubmit, formState: { errors } } = useForm({
    resolver: yupResolver(schema)
  })

  const [forgotPassword] = useMutation(FORGOT_PASSWORD, {
    onError(error) {
      setLoading(false)
      return toast.current?.show({ severity: 'error', summary: 'Error Message', detail: 'Something went wrong!' })
    },
    onCompleted(data) {
      setLoading(false)
      return toast.current?.show({ severity: 'success', summary: 'Success Message', detail: data.forgotPassword.data })
    }
  });

  const onSubmit = (data: ForgotPasswordData) => {
    setLoading(true)
    forgotPassword({ variables: { email: data.email } })
  }

  const getFormErrorMessage = (name: string) => {
    return errors[name] && <small className="p-error">{errors[name].message}</small>
  };

  return (
    <div className="d-flex flex-grow-1">
      <Head>
        <title>Forgot password</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container d-flex flex-grow-1 mb-3">
        <div className="row flex-grow-1 justify-content-center align-items-center">
          <Card title='Forgot password' className="col-12 col-md-9 col-lg-6 col-xl-4">
            <form onSubmit={handleSubmit(onSubmit)} className="p-fluid">
              <div className="p-field p-mb-5">
                <label htmlFor="email">Email</label>
                <InputText id="email" type="email" {...register("email")} />
                {getFormErrorMessage('email')}
              </div>
              <Button label="Send" iconPos="right" loading={loading} />
            </form>
          </Card>
        </div>
        <Toast ref={toast} />
      </main>
    </div>
  )
}
